.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SALVAGESERVER 8"
.TH SALVAGESERVER 8 "2011-09-06" "OpenAFS" "AFS Command Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
salvageserver \- Initializes the Salvageserver component of the dafs process
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBsalvageserver\fR [\fIinitcmd\fR] [\fB\-partition\fR\ <\fIname\ of\ partition\ to\ salvage\fR>]
    [\fB\-volumeid\fR\ <\fIvolume\ id\ to\ salvage\fR>] [\fB\-debug\fR] [\fB\-nowrite\fR]
    [\fB\-inodes\fR] [\fB\-force\fR] [\fB\-oktozap\fR] [\fB\-rootinodes\fR]
    [\fB\-salvagedirs\fR] [\fB\-blockreads\fR]
    [\fB\-parallel\fR\ <\fI#\ of\ max\ parallel\ partition\ salvaging\fR>]
    [\fB\-tmpdir\fR\ <\fIname\ of\ dir\ to\ place\ tmp\ files\fR>]
    [\fB\-showlog\fR] [\fB\-showsuid\fR] [\fB\-showmounts\fR]
    [\fB\-orphans\fR\ (ignore\ |\ remove\ |\ attach)]
    [\fB\-client\fR] [\fB\-help\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
In its typical mode of operation, the \fBsalvageserver\fR is a daemon process 
responsible for salvaging volumes.  It is a component of the \f(CW\*(C`dafs\*(C'\fR 
process type.  In the conventional configuration, its binary file is 
located in the \fI/usr/afs/bin\fR directory on a file server machine.
.PP
The Salvageserver daemon is responsible for scheduling and executing 
volume salvage operations on behalf of client processes.  The fileserver 
acts as the primary salvageserver client: any failed volume attach 
operation results in a salvageserver scheduling request.  The 
salvageserver also accepts periodic volume activity messages in order to 
update its salvage request priority queue.  Other clients of the 
salvageserver daemon include the \fBsalvsync-debug\fR utility, and the
salvageserver command itself by passing the \fB\-client\fR flag.
.PP
The salvage operations performed on vice partition data are nearly 
identical to those performed by the standalone Salvager command.  The 
key differences between the two commands are:
.IP "\(bu" 4
The Salvageserver is a daemon process which runs concurrently with the 
fileserver.  In contrast, the Salvager is a stand-alone application which 
is invoked when the fileserver and volserver are not running.
.IP "\(bu" 4
The Salvageserver is incapable of performing whole partition salvage 
operations; it operates at volume group granularity.
.PP
The Salvageserver normally creates new inodes as it repairs damage. If the
partition is so full that there is no room for new inodes, use the
\&\fB\-nowrite\fR argument to bringing undamaged volumes online without
attempting to salvage damaged volumes. Then use the \fBvos move\fR command to
move one or more of the undamaged volumes to other partitions, freeing up
the space that the Salvageserver needs to create new inodes.
.PP
By default, multiple Salvageserver subprocesses run in parallel: one for each 
volume group.  By default, four concurrent salvage operations are 
permitted.  You may alter this default by providing a positive integer 
value for the \fB\-parallel\fR argument.  The maximum permitted value is 32 
concurrent salvageserver subprocesses.
.PP
By default, the salvageserver enables a heuristic which attempts to stop
disk head thrashing by concurrent salvageserver subprocesses.  Unfortunately,
this heuristic significantly degrades performance in many cases.  In at least 
the following environments, passing the \f(CW\*(C`all\*(C'\fR string to the \fB\-parallel\fR 
argument is strongly encouraged:
.IP "\(bu" 4
On \s-1NAMEI\s0 fileservers
.IP "\(bu" 4
When a vice partition is backed by multiple disks (e.g. \s-1RAID\s0)
.IP "\(bu" 4
When a vice partition is backed by SAN-attached storage, \s-1LVM\s0, or some other
form of storage virtualization which would cause unix device id numbers to
be unpredictable.
.PP
The Salvageserver creates temporary files as it runs, by default writing them
to the partition it is salvaging. The number of files can be quite large,
and if the partition is too full to accommodate them, the Salvageserver
terminates without completing the salvage operation (it always removes the
temporary files before exiting). Other Salvageserver subprocesses running at
the same time continue until they finish salvaging all other partitions
where there is enough disk space for temporary files. To complete the
interrupted salvage, reissue the command against the appropriate
partitions, adding the \fB\-tmpdir\fR argument to redirect the temporary files
to a local disk directory that has enough space.
.PP
The \fB\-orphans\fR argument controls how the Salvageserver handles orphaned files
and directories that it finds on server partitions it is salvaging. An
\&\fIorphaned\fR element is completely inaccessible because it is not
referenced by the vnode of any directory that can act as its parent (is
higher in the filespace). Orphaned objects occupy space on the server
partition, but do not count against the volume's quota.
.PP
To generate a list of all mount points that reside in one or more volumes,
rather than actually salvaging them, include the \fB\-showmounts\fR flag.
.PP
This command does not use the syntax conventions of the \s-1AFS\s0 command
suites. Provide the command name and all option names in full.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "[\fIinitcmd\fR]" 4
.IX Item "[initcmd]"
Accommodates the command's use of the \s-1AFS\s0 command parser, and is optional.
.IP "\fB\-partition\fR <\fIname of partition to salvage\fR>" 4
.IX Item "-partition <name of partition to salvage>"
Specifies the name of the partition to salvage. Specify the full partition
name using the form \fI/vicep\fIx\fI\fR or \fI/vicep\fIxx\fI\fR. Omit this argument to
salvage every partition on the file server machine.
.IP "\fB\-volumeid\fR <\fIvolume id to salvage\fR>" 4
.IX Item "-volumeid <volume id to salvage>"
Specifies the volume \s-1ID\s0 of a specific read/write volume to salvage.  The
\&\fB\-partition\fR argument must be provided along with this one and specify
the volume's actual site.
.IP "\fB\-debug\fR" 4
.IX Item "-debug"
This flag should be considered deprecated.  Its primary purpose was to disable
forking and parallelization of the Salvager so that log messages were not
interleaved.  Due to the manner in which \fI/usr/afs/logs/SalSrvLog\fR is 
written, log messages from subprocesses are never interleaved; the entire log
for a volume group salvage is appended to the master log as one atomic 
transaction.
.IP "\fB\-nowrite\fR" 4
.IX Item "-nowrite"
Brings all undamaged volumes online without attempting to salvage any
damaged volumes.
.IP "\fB\-inodes\fR" 4
.IX Item "-inodes"
Records in the \fI/usr/afs/logs/SalSrvLog\fR file a list of all \s-1AFS\s0 inodes
that the Salvageserver modified.
.IP "\fB\-force\fR" 4
.IX Item "-force"
Inspects all volumes for corruption, not just those that are marked as
having been active when a crash occurred.
.IP "\fB\-oktozap\fR" 4
.IX Item "-oktozap"
Removes a volume that is so damaged that even issuing the \fBvos zap\fR
command with the \fB\-force\fR flag is ineffective. Combine it with the
\&\fB\-partition\fR and \fB\-volumeid\fR arguments to identify the volume to remove.
Using this flag will destroy data that cannot be read, so use only with
caution and when you're certain that nothing in that volume is still
needed.
.IP "\fB\-rootinodes\fR" 4
.IX Item "-rootinodes"
Records in the \fI/usr/afs/logs/SalSrvLog\fR file a list of all \s-1AFS\s0 inodes
owned by the local superuser \f(CW\*(C`root\*(C'\fR.
.IP "\fB\-salvagedirs\fR" 4
.IX Item "-salvagedirs"
Salvages entire directory structures, even if they do not appear to be
damaged. By default, the Salvageserver salvages a directory only if it is
flagged as corrupted.
.IP "\fB\-blockreads\fR" 4
.IX Item "-blockreads"
Forces the Salvageserver to read a partition one disk block (512 bytes) at a
time and to skip any blocks that are too badly damaged to be salvaged.
This allows it to salvage as many volumes as possible. By default, the
Salvageserver reads large disk blocks, which can cause it to exit prematurely
if it encounters disk errors. Use this flag if the partition to be
salvaged has disk errors.
.IP "\fB\-parallel\fR <\fI# of max parallel partition salvaging\fR>" 4
.IX Item "-parallel <# of max parallel partition salvaging>"
Specifies the maximum number of Salvageserver subprocesses to run in parallel.
Provide one of three values:
.RS 4
.IP "\(bu" 4
An integer from the range \f(CW1\fR to \f(CW32\fR. A value of \f(CW1\fR means that a
single Salvageserver subprocess salvages the volume groups sequentially.
The disk partition heuristic (see above) based upon unix device ids is 
enabled.
.IP "\(bu" 4
The disk partition heuristic (see above) based upon unix device ids is 
disabled.
.IP "\(bu" 4
The string \f(CW\*(C`all\*(C'\fR followed immediately (with no intervening space) by an
integer from the range \f(CW1\fR to \f(CW32\fR, to run the specified number of
Salvageserver subprocesses in parallel on volume groups.  The disk partition 
heuristic (see above) based upon unix device ids is disabled.
.RE
.RS 4
.Sp
If this argument is omitted, up to four Salvageserver subprocesses run
in parallel.
.RE
.IP "\fB\-tmpdir\fR <\fIname of dir to place tmp files\fR>" 4
.IX Item "-tmpdir <name of dir to place tmp files>"
Names a local disk directory in which the Salvageserver places the temporary
files it creates during a salvage operation, instead of writing them to
the partition being salvaged (the default). If the Salvageserver cannot write
to the specified directory, it attempts to write to the partition being
salvaged.
.IP "\fB\-showlog\fR" 4
.IX Item "-showlog"
Displays on the standard output stream all log data that is being written
to the \fI/usr/afs/logs/SalSrvLog\fR file.
.IP "\fB\-showsuid\fR" 4
.IX Item "-showsuid"
Displays a list of the pathnames for all files that have the setuid or
setgid mode bit set.
.IP "\fB\-showmounts\fR" 4
.IX Item "-showmounts"
Records in the \fI/usr/afs/logs/SalSrvLog\fR file all mount points found in
each volume. The Salvageserver does not repair corruption in the volumes, if
any exists.
.IP "\fB\-orphans\fR (ignore | remove | attach)" 4
.IX Item "-orphans (ignore | remove | attach)"
Controls how the Salvageserver handles orphaned files and directories.  Choose
one of the following three values:
.RS 4
.IP "ignore" 4
.IX Item "ignore"
Leaves the orphaned objects on the disk, but prints a message to the
\&\fI/usr/afs/logs/SalSrvLog\fR file reporting how many orphans were found and
the approximate number of kilobytes they are consuming. This is the
default if the \fB\-orphans\fR argument is omitted.
.IP "remove" 4
.IX Item "remove"
Removes the orphaned objects, and prints a message to the
\&\fI/usr/afs/logs/SalSrvLog\fR file reporting how many orphans were removed
and the approximate number of kilobytes they were consuming.
.IP "attach" 4
.IX Item "attach"
Attaches the orphaned objects by creating a reference to them in the vnode
of the volume's root directory. Since each object's actual name is now
lost, the Salvageserver assigns each one a name of the following form:
.RS 4
.ie n .IP """_\|_ORPHANFILE_\|_.\f(CIindex\f(CW"" for files." 4
.el .IP "\f(CW_\|_ORPHANFILE_\|_.\f(CIindex\f(CW\fR for files." 4
.IX Item "__ORPHANFILE__.index for files."
.PD 0
.ie n .IP """_\|_ORPHANDIR_\|_.\f(CIindex\f(CW"" for directories." 4
.el .IP "\f(CW_\|_ORPHANDIR_\|_.\f(CIindex\f(CW\fR for directories." 4
.IX Item "__ORPHANDIR__.index for directories."
.RE
.RS 4
.PD
.Sp
where \fIindex\fR is a two-digit number that uniquely identifies each
object. The orphans are charged against the volume's quota and appear in
the output of the \fBls\fR command issued against the volume's root
directory.
.RE
.RE
.RS 4
.RE
.IP "\fB\-client\fR" 4
.IX Item "-client"
Salvageserver runs in client Mode.  The requested volume on the requested
partition will be scheduled for salvaging by the Salvageserver daemon.
.IP "\fB\-help\fR" 4
.IX Item "-help"
Prints the online help for this command. All other valid options are
ignored.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
The following command instructs the Salvageserver to schedule the salvage 
of the volume with volume \s-1ID\s0 258347486 on \fI/vicepg\fR on the local machine.
.PP
.Vb 1
\&   % /usr/afs/bin/salvageserver \-partition /vicepg \-volumeid 258347486 \-client
.Ve
.SH "PRIVILEGE REQUIRED"
.IX Header "PRIVILEGE REQUIRED"
To issue the command at the shell prompt, the issuer must be logged in as
the local superuser \f(CW\*(C`root\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIBosConfig\fR\|(5),
\&\fISalvageLog\fR\|(5),
\&\fISalvager\fR\|(8),
\&\fIbos_create\fR\|(8),
\&\fIbos_getlog\fR\|(8),
\&\fIbos_salvage\fR\|(8),
\&\fIvos_move\fR\|(1)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
\&\s-1IBM\s0 Corporation 2000. <http://www.ibm.com/> All Rights Reserved.
Sine Nomine Associates 2008.  All Rights Reserved.
.PP
This documentation is covered by the \s-1IBM\s0 Public License Version 1.0.  It was
converted from \s-1HTML\s0 to \s-1POD\s0 by software written by Chas Williams and Russ
Allbery, based on work by Alf Wachsmann and Elizabeth Cassell.  This document
was adapted from the Salvager \s-1POD\s0 documentation.
