.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BUTC 5"
.TH BUTC 5 "2011-09-06" "OpenAFS" "AFS File Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
butc \- Defines Tape Coordinator instructions for automated tape devices
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fI\s-1CFG_\s0\fIdevice_name\fI\fR file includes instructions that configure a Tape
Coordinator (\fBbutc\fR) for use with automated backup devices such as tape
stackers and jukeboxes, enable the Tape Coordinator to dump and restore
data to a \fIbackup data file\fR on a local disk device, and enable greater
automation of other aspects of the backup process.
.PP
There is a separate configuration file for each tape device or backup data
file. Creating the file is optional, and unnecessary if none of the
instructions it can include pertain to a given tape device. The
ASCII-format file must reside in the \fI/usr/afs/backup\fR directory on the
Tape Coordinator machine if it exists.
.PP
The \fI\s-1CFG_\s0\fIdevice_name\fI\fR file does not replace the
\&\fI/usr/afs/backup/tapeconfig\fR file, a single copy of which still must
exist on every Tape Coordinator machine.
.PP
To enable the Tape Coordinator to locate the configuration file, construct
the variable part of the filename, \fIdevice_name\fR, as follows:
.IP "\(bu" 4
For a tape device, strip off the initial \f(CW\*(C`/dev/\*(C'\fR string from the device
name, and replace any other slashes in the name with underscores. For
example, \fICFG_rmt_4m\fR is the appropriate filename for a device called
\&\fI/dev/rmt/4m\fR.
.IP "\(bu" 4
For a backup data file, strip off the initial slash (\f(CW\*(C`/\*(C'\fR) and replace any
other slashes in the name with underscores. For example,
\&\fICFG_var_tmp_FILE\fR is the appropriate filename for a backup data file
called \fI/var/tmp/FILE\fR.
.PP
The \fI\s-1CFG_\s0\fIdevice_name\fI\fR file lists one or more of the following
instructions, each on its own line. All are optional, and they can appear
in any order. A more detailed description of each instruction follows the
list:
.IP "\s-1ASK\s0" 4
.IX Item "ASK"
Controls whether the Tape Coordinator prompts for guidance when it
encounters error conditions.
.IP "\s-1AUTOQUERY\s0" 4
.IX Item "AUTOQUERY"
Controls whether the Tape Coordinator prompts for the first tape.
.IP "\s-1BUFFERSIZE\s0" 4
.IX Item "BUFFERSIZE"
Sets the size of the memory buffer the Tape Coordinator uses when
transferring data.
.IP "\s-1FILE\s0" 4
.IX Item "FILE"
Controls whether the dump is written to a tape device or a file.
.IP "\s-1MOUNT\s0" 4
.IX Item "MOUNT"
Identifies the file that contains routines for inserting tapes into the
device's drive.
.IP "\s-1NAME_CHECK\s0" 4
.IX Item "NAME_CHECK"
Controls whether the Tape Coordinator verifies that a tape's \s-1AFS\s0 tape
name matches the dump being written.
.IP "\s-1UNMOUNT\s0" 4
.IX Item "UNMOUNT"
Identifies the file that contains routines for removing tapes from the
device's drive.
.SS "The \s-1ASK\s0 Instruction"
.IX Subsection "The ASK Instruction"
The \f(CW\*(C`ASK\*(C'\fR instruction takes a boolean value as its argument, in the
following format:
.PP
.Vb 1
\&   ASK (YES | NO)
.Ve
.PP
When the value is \f(CW\*(C`YES\*(C'\fR, the Tape Coordinator generates a prompt in its
window, requesting a response to the error cases described in the
following list. This is the default behavior if the \f(CW\*(C`ASK\*(C'\fR instruction
does not appear in the \fI\s-1CFG_\s0\fIdevice_name\fI\fR file.
.PP
When the value is \f(CW\*(C`NO\*(C'\fR, the Tape Coordinator does not prompt in error
cases, but instead uses the automatic default responses described in the
following list. The Tape Coordinator also logs the error in the
\&\fI\s-1TE_\s0\fIdevice_name\fI\fR file. Suppressing the prompts enables the Tape
Coordinator to run unattended, though it still prompts for insertion of
tapes unless the \f(CW\*(C`MOUNT\*(C'\fR instruction is used.
.PP
The error cases controlled by this instruction are the following:
.IP "\(bu" 4
The Backup System is unable to dump a volume while running the backup dump
command. With a \f(CW\*(C`YES\*(C'\fR value, the Tape Coordinator prompts to offer three
choices: try to dump the volume again immediately, omit the volume from
the dump but continue the operation, or terminate the operation. With a
\&\f(CW\*(C`NO\*(C'\fR value, the Tape Coordinator omits the volume from the dump and
continues the operation.
.IP "\(bu" 4
The Backup System is unable to restore a volume while running the \fBbackup
diskrestore\fR, \fBbackup volrestore\fR, or \fBbackup volsetrestore\fR
command. With a \f(CW\*(C`YES\*(C'\fR value, the Tape Coordinator prompts to offer two
choices: omit the volume and continue restoring the other volumes, or
terminate the operation. With a \f(CW\*(C`NO\*(C'\fR value, it continues the operation
without prompting, omitting the problematic volume but restoring the
remaining ones.
.IP "\(bu" 4
The Backup System cannot determine if the dump set includes any more
tapes, while running the \fBbackup scantape\fR command (the reference page
for that command discusses possible reasons for this problem).  With a
\&\f(CW\*(C`YES\*(C'\fR value, the Tape Coordinator prompts to ask if there are more tapes
to scan. With a \f(CW\*(C`NO\*(C'\fR value, it proceeds as though there are more tapes
and invokes the routine named by the \f(CW\*(C`MOUNT\*(C'\fR instruction in the
configuration file, or prompts the operator to insert the next tape.
.IP "\(bu" 4
The Backup System determines that the tape contains an unexpired dump
while running the \fBbackup labeltape\fR command. With a \f(CW\*(C`YES\*(C'\fR value, the
Tape Coordinator prompts to offer two choices: continue or terminate the
labeling operation. With a \f(CW\*(C`NO\*(C'\fR value, it terminates the operation
without relabeling the tape.
.SS "The \s-1AUTOQUERY\s0 Instruction"
.IX Subsection "The AUTOQUERY Instruction"
The \f(CW\*(C`AUTOQUERY\*(C'\fR instruction takes a boolean value as its argument,
in the following format:
.PP
.Vb 1
\&   AUTOQUERY (YES | NO)
.Ve
.PP
When the value is \f(CW\*(C`YES\*(C'\fR, the Tape Coordinator checks for the \f(CW\*(C`MOUNT\*(C'\fR
instruction in the configuration file when it needs to read the first tape
involved in an operation. As described for that instruction, it then
either prompts for the tape or invokes the specified routine to mount the
tape. This is the default behavior if the \f(CW\*(C`AUTOQUERY\*(C'\fR instruction does
not appear in the configuration file.
.PP
When the value is \f(CW\*(C`NO\*(C'\fR, the Tape Coordinator assumes that the first tape
required for an operation is already in the drive. It does not prompt the
operator or invoke the \f(CW\*(C`MOUNT\*(C'\fR routine unless there is an error in
accessing the first tape. This setting is equivalent in effect to
including the \fB\-noautoquery\fR flag to the \fBbutc\fR command.
.PP
Note that the setting of the \f(CW\*(C`AUTOQUERY\*(C'\fR instruction controls the Tape
Coordinator's behavior only with respect to the first tape required for an
operation. For subsequent tapes, the Tape Coordinator always checks for
the \f(CW\*(C`MOUNT\*(C'\fR instruction. It also refers to the \f(CW\*(C`MOUNT\*(C'\fR instruction if it
encounters an error while attempting to access the first tape.
.SS "The \s-1BUFFERSIZE\s0 Instruction"
.IX Subsection "The BUFFERSIZE Instruction"
The \f(CW\*(C`BUFFERSIZE\*(C'\fR instruction takes an integer value, and optionally
units, in the following format:
.PP
.Vb 1
\&   BUFFERSIZE <size>[(k | K | m | M | g | G)]
.Ve
.PP
where <size> specifies the amount of memory the Tape Coordinator allocates
to use as a buffer during both dump and restore operations.  The default
unit is bytes, but use \f(CW\*(C`k\*(C'\fR or \f(CW\*(C`K\*(C'\fR to specify kilobytes, \f(CW\*(C`m\*(C'\fR or \f(CW\*(C`M\*(C'\fR for
megabytes, and \f(CW\*(C`g\*(C'\fR or \f(CW\*(C`G\*(C'\fR for gigabytes. There is no space between the
<size> value and the units letter.
.PP
By default, the Tape Coordinator uses a 16 \s-1KB\s0 buffer during dump
operations. As it receives volume data from the Volume Server, the Tape
Coordinator gathers 16 \s-1KB\s0 of data in the buffer before transferring the
entire 16 \s-1KB\s0 to the tape device or backup data file. Similarly, during a
restore operation the Tape Coordinator by default buffers 32 \s-1KB\s0 of data
from the tape device or backup data file before transferring the entire 32
\&\s-1KB\s0 to the Volume Server for restoration into the file system. Buffering
makes the volume of data flowing to and from a tape device more even and
so promotes tape streaming, which is the most efficient way for a tape
device to operate.
.PP
In a normal network configuration, the default buffer sizes are usually
large enough to promote tape streaming. If the network between the Tape
Coordinator machine and file server machines is slow, it can help to
increase the buffer size.
.SS "The \s-1FILE\s0 Instruction"
.IX Subsection "The FILE Instruction"
The \f(CW\*(C`FILE\*(C'\fR instruction takes a boolean value as its argument, in the
following format:
.PP
.Vb 1
\&   FILE (NO | YES)
.Ve
.PP
When the value is \f(CW\*(C`NO\*(C'\fR, the Tape Coordinator writes to a tape device
during a dump operation and reads from one during a restore
operation. This is the default behavior if the \f(CW\*(C`FILE\*(C'\fR instruction does
not appear in the configuration file.
.PP
When the value is \f(CW\*(C`YES\*(C'\fR, the Tape Coordinator writes volume data to a
backup data file on the local disk during a dump operation and reads
volume data from a file during a restore operation. If the file does not
exist when the Tape Coordinator attempts to access it to write a dump, the
Tape Coordinator creates it. For a restore operation to succeed, the file
must exist and contain volume data previously written to it by a \fBbackup
dump\fR operation.
.PP
When the value is \f(CW\*(C`YES\*(C'\fR, the backup data file's complete pathname must
appear (instead of a tape drive device name) in the third field of the
corresponding port offset entry in the local \fI/usr/afs/backup/tapeconfig\fR
file. If the field instead refers to a tape device, dump operations appear
to succeed but are inoperative. It is not possible to restore data that
was accidently dumped to a tape device while the \f(CW\*(C`FILE\*(C'\fR instruction was
set to \f(CW\*(C`YES\*(C'\fR. (In the same way, if the \f(CW\*(C`FILE\*(C'\fR instruction is set to
\&\f(CW\*(C`NO\*(C'\fR, the \fItapeconfig\fR entry must refer to an actual tape device.)
.PP
Rather than put an actual file pathname in the third field of the
\&\fItapeconfig\fR file, however, the recommended configuration is to create a
symbolic link in the \fI/dev\fR directory that points to the actual file
pathname, and record the symbolic link in this field. This configuration
has a couple of advantages:
.IP "\(bu" 4
It makes the \fIdevice_name\fR portion of the \fI\s-1CFG_\s0\fIdevice_name\fI\fR,
\&\fI\s-1TE_\s0\fIdevice_name\fI\fR, and \fI\s-1TL_\s0\fIdevice_name\fI\fR names as short as
possible. Because the symbolic link is in the \fI/dev\fR directory as though
it were a tape device, the device configuration file's name is constructed
by stripping off the entire \fI/dev/\fR prefix, instead of just the initial
slash. If, for example, the symbolic link is called \fI/dev/FILE\fR, the
device configuration file name is \fI\s-1CFG_FILE\s0\fR, whereas if the actual
pathname \fI/var/tmp/FILE\fR appears in the \fBtapeconfig\fR file, the file's
name must be \fICFG_var_tmp_FILE\fR.
.IP "\(bu" 4
It provides for a more graceful, and potentially automated, recovery if
the Tape Coordinator cannot write a complete dump into the backup data
file (because the partition housing the backup data file becomes full, for
example). The Tape Coordinator's reaction to this problem is to invoke the
\&\f(CW\*(C`MOUNT\*(C'\fR script, or to prompt the operator if the \f(CW\*(C`MOUNT\*(C'\fR instruction
does not appear in the configuration file.
.RS 4
.IP "\(bu" 4
If there is a \f(CW\*(C`MOUNT\*(C'\fR routine, the operator can prepare for this
situation by adding a subroutine that changes the symbolic link to point
to another backup data file on a partition where there is space available.
.IP "\(bu" 4
If there is no \f(CW\*(C`MOUNT\*(C'\fR instruction, the prompt enables the operator
manually to change the symbolic link to point to another backup data file,
then press Return to signal that the Tape Coordinator can continue the
operation.
.RE
.RS 4
.RE
.PP
If the third field in the \fItapeconfig\fR file names the actual file, there
is no way to recover from exhausting the space on the partition that
houses the backup data file. It is not possible to change the
\&\fItapeconfig\fR file in the middle of an operation.
.PP
When writing to a backup data file, the Tape Coordinator writes data at 16
\&\s-1KB\s0 offsets. If a given block of data (such as the marker that signals the
beginning or end of a volume) does not fill the entire 16 \s-1KB\s0, the Tape
Coordinator still skips to the next offset before writing the next
block. In the output of a \fBbackup dumpinfo\fR command issued with the
\&\fB\-id\fR option, the value in the \f(CW\*(C`Pos\*(C'\fR column is the ordinal of the 16\-KB
offset at which the volume data begins, and so is not generally only one
higher than the position number on the previous line, as it is for dumps
to tape.
.SS "The \s-1MOUNT\s0 Instruction"
.IX Subsection "The MOUNT Instruction"
The \f(CW\*(C`MOUNT\*(C'\fR instruction takes a pathname as its argument, in the
following format:
.PP
.Vb 1
\&   MOUNT <filename>
.Ve
.PP
The referenced executable file must reside on the local disk and contain a
shell script or program that directs an automated tape device, such as a
jukebox or stacker, to mount a tape (insert it into the tape reader).  The
operator must write the routine to invoke the mount command specified by
the device's manufacturer; \s-1AFS\s0 does not include any scripts, although an
example appears in \s-1EXAMPLES\s0.  The script or program inherits the Tape
Coordinator's \s-1AFS\s0 authentication status.
.PP
When the Tape Coordinator needs to mount a tape, it checks the
configuration file for a \f(CW\*(C`MOUNT\*(C'\fR instruction. If there is no \f(CW\*(C`MOUNT\*(C'\fR
instruction, the Tape Coordinator prompts the operator to insert a tape
before it attempts to open the tape device. If there is a \f(CW\*(C`MOUNT\*(C'\fR
instruction, the Tape Coordinator executes the routine in the referenced
file. The routine invoked by the \f(CW\*(C`MOUNT\*(C'\fR instruction inherits the local
identity (\s-1UNIX\s0 \s-1UID\s0) and \s-1AFS\s0 tokens of the \fBbutc\fR command's issuer.
.PP
There is an exception to this sequence: if the \f(CW\*(C`AUTOQUERY NO\*(C'\fR instruction
appears in the configuration file, or the \fB\-noautoquery\fR flag was
included on the \fBbutc\fR command, then the Tape Coordinator assumes that
the operator has already inserted the first tape needed for a given
operation. It attempts to read the tape immediately, and only checks for
the \f(CW\*(C`MOUNT\*(C'\fR instruction or prompts the operator if the tape is missing or
is not the required one.
.PP
When the Tape Coordinator invokes the routine indicated by the \f(CW\*(C`MOUNT\*(C'\fR
instruction, it passes the following parameters to the routine in the
indicated order:
.IP "\(bu" 4
The tape device or backup data file's pathname, as recorded in the
\&\fI/usr/afs/backup/tapeconfig\fR file.
.IP "\(bu" 4
The tape operation, which (except for the exceptions noted in the
following list) matches the \fBbackup\fR command operation code used to
initiate the operation:
.RS 4
.IP "\(bu" 4
\&\f(CW\*(C`appenddump\*(C'\fR (when a backup dump command includes the \fB\-append\fR flag).
.IP "\(bu" 4
\&\f(CW\*(C`dump\*(C'\fR (when a backup dump command does not include the \fB\-append\fR flag).
.IP "\(bu" 4
\&\f(CW\*(C`labeltape\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`readlabel\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`restore\*(C'\fR (for a \fBbackup diskrestore\fR, backup volrestore, or \fBbackup
volsetrestore\fR command).
.IP "\(bu" 4
\&\f(CW\*(C`restoredb\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`savedb\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`scantape\*(C'\fR
.RE
.RS 4
.RE
.IP "\(bu" 4
The number of times the Tape Coordinator has attempted to open the tape
device or backup data file. If the open attempt returns an error, the Tape
Coordinator increments this value by one and again invokes the \f(CW\*(C`MOUNT\*(C'\fR
instruction.
.IP "\(bu" 4
The tape name. For some operations, the Tape Coordinator passes the string
\&\f(CW\*(C`none\*(C'\fR, because it does not know the tape name (when running the \fBbackup
scantape\fR or \fBbackup readlabel\fR, for example), or because the tape does
not necessarily have a name (when running the \fBbackup labeltape\fR command,
for example).
.IP "\(bu" 4
The tape \s-1ID\s0 recorded in the Backup Database. As with the tape name, the
Backup System passes the string \f(CW\*(C`none\*(C'\fR for operations where it does not
know the tape \s-1ID\s0 or the tape does not necessarily have an \s-1ID\s0.
.PP
The routine invoked by the \f(CW\*(C`MOUNT\*(C'\fR instruction must return an exit code
to the Tape Coordinator:
.IP "\(bu" 4
Code 0 (zero) indicates that the routine successfully mounted the
tape. The Tape Coordinator continues the backup operation.  If the routine
invoked by the \f(CW\*(C`MOUNT\*(C'\fR instruction does not return this exit code, the
Tape Coordinator never calls the \f(CW\*(C`UNMOUNT\*(C'\fR instruction.
.IP "\(bu" 4
Code 1 (one) indicates that the routine failed to mount the tape. The Tape
Coordinator terminates the operation.
.IP "\(bu" 4
Any other code indicates that the routine was not able to access the
correct tape. The Tape Coordinator prompts the operator to insert the
correct tape.
.PP
If the backup command was issued in interactive mode and the operator
issues the \fBbackup kill\fR command while the \f(CW\*(C`MOUNT\*(C'\fR routine is running,
the Tape Coordinator passes the termination signal to the routine; the
entire operation terminates.
.SS "The \s-1NAME_CHECK\s0 Instruction"
.IX Subsection "The NAME_CHECK Instruction"
The \f(CW\*(C`NAME_CHECK\*(C'\fR instruction takes a boolean value as its argument, in
the following format:
.PP
.Vb 1
\&   NAME_CHECK (YES | NO)
.Ve
.PP
When the value is \f(CW\*(C`YES\*(C'\fR and the tape does not have a permanent name, the
Tape Coordinator checks the \s-1AFS\s0 tape name when dumping a volume in
response to the \fBbackup dump\fR command. The \s-1AFS\s0 tape name must be \f(CW\*(C`<NULL>\*(C'\fR or match the tape name that the \fBbackup dump\fR operation assigns
based on the volume set and dump level names. This is the default behavior
if the \f(CW\*(C`NAME_CHECK\*(C'\fR instruction does not appear in the configuration
file.
.PP
When the value is \f(CW\*(C`NO\*(C'\fR, the Tape Coordinator does not check the \s-1AFS\s0 tape
name before writing to the tape.
.PP
The Tape Coordinator always checks that all dumps on the tape are expired,
and refuses to write to a tape that contains unexpired dumps.
.SS "The \s-1UNMOUNT\s0 Instruction"
.IX Subsection "The UNMOUNT Instruction"
The \f(CW\*(C`UNMOUNT\*(C'\fR instruction takes a pathname as its argument, in the
following format:
.PP
.Vb 1
\&   UNMOUNT <filename>
.Ve
.PP
The referenced executable file must reside on the local disk and contain a
shell script or program that directs an automated tape device, such as a
jukebox or stacker, to unmount a tape (remove it from the tape reader).
The operator must write the routine to invoke the unmount command
specified by the device's manufacturer; \s-1AFS\s0 does not include any scripts,
although an example appears in \s-1EXAMPLES\s0.  The script or program
inherits the Tape Coordinator's \s-1AFS\s0 authentication status.
.PP
After closing a tape device, the Tape Coordinator checks the configuration
file for an \f(CW\*(C`UNMOUNT\*(C'\fR instruction, whether or not the \fBclose\fR operation
succeeds. If there is no \f(CW\*(C`UNMOUNT\*(C'\fR instruction, the Tape Coordinator
takes no action, in which case the operator must take the action necessary
to remove the current tape from the drive before another can be
inserted. If there is an \f(CW\*(C`UNMOUNT\*(C'\fR instruction, the Tape Coordinator
executes the referenced file. It invokes the routine only once, passing in
the following parameters:
.IP "\(bu" 4
The tape device pathname (as specified in the
\&\fI/usr/afs/backup/tapeconfig\fR file).
.IP "\(bu" 4
The tape operation (always unmount).
.SH "PRIVILEGE REQUIRED"
.IX Header "PRIVILEGE REQUIRED"
The file is protected by \s-1UNIX\s0 mode bits. Creating the file requires the
\&\f(CW\*(C`w\*(C'\fR (write) and \f(CW\*(C`x\*(C'\fR (execute) permissions on the \fI/usr/afs/backup\fR
directory. Editing the file requires the \f(CW\*(C`w\*(C'\fR (write) permission on the
file.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
The following example configuration files demonstrate one way to structure
a configuration file for a stacker or backup dump file. The examples are
not necessarily appropriate for a specific cell; if using them as models,
be sure to adapt them to the cell's needs and equipment.
.SS "Example \fI\s-1CFG_\s0device_name\fP File for Stackers"
.IX Subsection "Example CFG_device_name File for Stackers"
In this example, the administrator creates the following entry for a tape
stacker called \f(CW\*(C`stacker0.1\*(C'\fR in the \fI/usr/afs/backup/tapeconfig\fR file. It
has port offset 0.
.PP
.Vb 1
\&   2G   5K   /dev/stacker0.1   0
.Ve
.PP
The administrator includes the following five lines in the
\&\fI/usr/afs/backup/CFG_stacker0.1\fR file. To review the meaning of each
instruction, see \s-1DESCRIPTION\s0.
.PP
.Vb 5
\&   MOUNT /usr/afs/backup/stacker0.1
\&   UNMOUNT /usr/afs/backup/stacker0.1
\&   AUTOQUERY NO
\&   ASK NO
\&   NAME_CHECK NO
.Ve
.PP
Finally, the administrator writes the following executable routine in the
\&\fI/usr/afs/backup/stacker0.1\fR file referenced by the \f(CW\*(C`MOUNT\*(C'\fR and
\&\f(CW\*(C`UNMOUNT\*(C'\fR instructions in the \fICFG_stacker0.1\fR file.
.PP
.Vb 1
\&   #! /bin/csh \-f
\&
\&   set devicefile = $1
\&   set operation = $2
\&   set tries = $3
\&   set tapename = $4
\&   set tapeid = $5
\&
\&   set exit_continue = 0
\&   set exit_abort = 1
\&   set exit_interactive = 2
\&
\&   #\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&   if (${tries} > 1) then
\&      echo "Too many tries"
\&      exit ${exit_interactive}
\&   endif
\&
\&   if (${operation} == "unmount") then
\&      echo "UnMount: Will leave tape in drive"
\&      exit ${exit_continue}
\&   endif
\&
\&   if ((${operation} == "dump")     |\e
\&       (${operation} == "appenddump")     |\e
\&       (${operation} == "savedb"))  then
\&
\&       stackerCmd_NextTape ${devicefile}
\&       if (${status} != 0)exit${exit_interactive}
\&       echo "Will continue"
\&       exit ${exit_continue}
\&   endif
\&
\&   if ((${operation} == "labeltape")    |\e
\&       (${operation} == "readlabel")) then
\&      echo "Will continue"
\&      exit ${exit_continue}
\&   endif
\&
\&   echo "Prompt for tape"
\&   exit ${exit_interactive}
.Ve
.PP
This routine uses two of the parameters passed to it by the Backup System:
\&\f(CW\*(C`tries\*(C'\fR and \f(CW\*(C`operation\*(C'\fR. It follows the recommended practice of
prompting for a tape if the value of the \f(CW\*(C`tries\*(C'\fR parameter exceeds one,
because that implies that the stacker is out of tapes.
.PP
For a \fBbackup dump\fR or backup savedb operation, the routine calls the
example \f(CW\*(C`stackerCmd_NextTape\*(C'\fR function provided by the stacker's
manufacturer. Note that the final lines in the file return the exit code
that prompts the operator to insert a tape; these lines are invoked when
either the stacker cannot load a tape or a the operation being performed
is not one of those explicitly mentioned in the file (such as a restore
operation).
.SS "Example \fI\s-1CFG_\s0device_name\fP File for Dumping to a Data File"
.IX Subsection "Example CFG_device_name File for Dumping to a Data File"
In this example, the administrator creates the following entry for a
backup data file called \fIHSM_device\fR in the \fI/usr/afs/backup/tapeconfig\fR
file. It has port offset 20.
.PP
.Vb 1
\&   1G   0K   /dev/HSM_device   20
.Ve
.PP
The administrator includes the following lines in the
\&\fI/usr/afs/backup/CFG_HSM_device\fR file. To review the meaning of each
instruction, see \s-1DESCRIPTION\s0.
.PP
.Vb 3
\&   MOUNT /usr/afs/backup/file
\&   FILE YES
\&   ASK NO
.Ve
.PP
Finally, the administrator writes the following executable routine in the
\&\fI/usr/afs/backup/file\fR file referenced by the \f(CW\*(C`MOUNT\*(C'\fR instruction in the
\&\fICFG_HSM_device\fR file, to control how the Tape Coordinator handles the
file.
.PP
.Vb 6
\&   #! /bin/csh \-f
\&   set devicefile = $1
\&   set operation = $2
\&   set tries = $3
\&   set tapename = $4
\&   set tapeid = $5
\&
\&   set exit_continue = 0
\&   set exit_abort = 1
\&   set exit_interactive = 2
\&
\&   #\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&   if (${tries} > 1) then
\&      echo "Too many tries"
\&      exit ${exit_interactive}
\&   endif
\&
\&   if (${operation} == "labeltape") then
\&      echo "Won\*(Aqt label a tape/file"
\&      exit ${exit_abort}
\&   endif
\&
\&   if ((${operation} == "dump")   |\e
\&       (${operation} == "appenddump")   |\e
\&       (${operation} == "restore")   |\e
\&       (${operation} == "savedb")    |\e
\&       (${operation} == "restoredb")) then
\&
\&      /bin/rm \-f ${devicefile}
\&      /bin/ln \-s /hsm/${tapename}_${tapeid} ${devicefile}
\&      if (${status} != 0) exit ${exit_abort}
\&   endif
\&
\&   exit ${exit_continue}
.Ve
.PP
Like the example routine for a tape stacker, this routine uses the
\&\f(CW\*(C`tries\*(C'\fR and \f(CW\*(C`operation\*(C'\fR parameters passed to it by the Backup
System. The \f(CW\*(C`tries\*(C'\fR parameter tracks how many times the Tape Coordinator
has attempted to access the file. A value greater than one indicates that
the Tape Coordinator cannot access it, and the routine returns exit code 2
(\f(CW\*(C`exit_interactive\*(C'\fR), which results in a prompt for the operator to load
a tape. The operator can use this opportunity to change the name of the
backup data file specified in the \fBtapeconfig\fR file.
.PP
The primary function of this routine is to establish a link between the
device file and the file to be dumped or restored. When the Tape
Coordinator is executing a \fBbackup dump\fR, \fBbackup restore\fR, \fBbackup
savedb\fR, or \fBbackup restoredb\fR operation, the routine invokes the \s-1UNIX\s0
\&\f(CW\*(C`ln \-s\*(C'\fR command to create a symbolic link from the backup data file named
in the \fItapeconfig\fR file to the actual file to use (this is the
recommended method). It uses the value of the \f(CW\*(C`tapename\*(C'\fR and \f(CW\*(C`tapeid\*(C'\fR
parameters to construct the file name.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fItapeconfig\fR\|(5),
\&\fIbackup_diskrestore\fR\|(8),
\&\fIbackup_dump\fR\|(8),
\&\fIbackup_restoredb\fR\|(8),
\&\fIbackup_savedb\fR\|(8),
\&\fIbackup_volrestore\fR\|(8),
\&\fIbackup_volsetrestore\fR\|(8)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
\&\s-1IBM\s0 Corporation 2000. <http://www.ibm.com/> All Rights Reserved.
.PP
This documentation is covered by the \s-1IBM\s0 Public License Version 1.0.  It was
converted from \s-1HTML\s0 to \s-1POD\s0 by software written by Chas Williams and Russ
Allbery, based on work by Alf Wachsmann and Elizabeth Cassell.
