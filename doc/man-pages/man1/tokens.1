.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TOKENS 1"
.TH TOKENS 1 "2011-09-06" "OpenAFS" "AFS Command Reference"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
tokens, tokens.krb \- Displays the issuer's tokens
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBtokens\fR [\fB\-help\fR]
.PP
\&\fBtokens\fR [\fB\-h\fR]
.PP
\&\fBtokens.krb\fR [\fB\-help\fR]
.PP
\&\fBtokens.krb\fR [\fB\-h\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBtokens\fR command displays all tokens (tickets) cached on the local
machine for the issuer. \s-1AFS\s0 server processes require that their clients
present a token as evidence that they have authenticated in the server's
local cell.
.PP
The (mostly obsolete) \fBtokens.krb\fR command is the same as \fBtokens\fR
except that it also displays the user's Kerberos v4 ticket cache.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-help\fR" 4
.IX Item "-help"
Prints the online help for this command. All other valid options are
ignored.
.SH "OUTPUT"
.IX Header "OUTPUT"
The output lists one token for each cell in which the user is
authenticated. The output indicates the
.IP "\(bu" 2
User's \s-1AFS\s0 \s-1UID\s0, if it is available for display.
.IP "\(bu" 2
Server for which the token is valid (normally, afs).  This includes a cell
specification.
.IP "\(bu" 2
Day and time the token expires.
.PP
The output of the Kerberos version of this command, \fBtokens.krb\fR, also
reports the following about the Kerberos ticket-granting ticket: the
ticket owner, which Kerberos ticket-granting service that issued the
ticket (for example, \f(CW\*(C`krbtgt.ABC.COM\*(C'\fR), and ticket's expiration date.
.PP
The string \f(CW\*(C`\-\-End of list\-\-\*(C'\fR appears at the end of the output. If the
user is not authenticated in any cell, this line is all that appears.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
The following example shows the output when the issuer is not
authenticated in any cell.
.PP
.Vb 2
\&   % tokens
\&   Tokens held by the Cache Manager:
\&
\&      \-\-End of list\-\-
.Ve
.PP
The following example shows the output when the issuer is authenticated in
\&\s-1ABC\s0 Corporation cell, where he or she has \s-1AFS\s0 \s-1UID\s0 1000.
.PP
.Vb 2
\&   % tokens
\&   Tokens held by the Cache Manager:
\&
\&   User\*(Aqs (AFS ID 1000) tokens for afs@abc.com [Expires Jan 2 10:00]
\&      \-\-End of list\-\-
.Ve
.PP
The following example shows the output when the issuer is authenticated in
the \s-1ABC\s0 Corporation cell, the State University cell, and the \s-1XYZ\s0 Company
cell. The user has different \s-1AFS\s0 UIDs in the three cells. Tokens for last
cell are expired:
.PP
.Vb 2
\&   % tokens
\&   Tokens held by the Cache Manager:
\&
\&   User\*(Aqs (AFS ID 1000) tokens for afs@abc.com [Expires Jan 3 10:00]
\&   User\*(Aqs (AFS ID 4286) tokens for afs@stateu.edu [Expires Jan 3 1:34]
\&   User\*(Aqs (AFS ID 22) tokens for afs@xyz.com [>>Expired<]
\&      \-\-End of list\-\-
.Ve
.PP
The following example shows the output when the issuer uses the
\&\fBtokens.krb\fR version of the command after authenticating in the \s-1ABC\s0
Corporation cell using the \fBklog.krb\fR command.
.PP
.Vb 2
\&   % tokens.krb
\&   Tokens held by the Cache Manager:
\&
\&   User\*(Aqs (AFS ID 1000) tokens for afs@abc.com [Expires Jan 31 00:09]
\&   User smiths tokens for krbtgt.ABC.COM@abc.com [Expires Jan 31 00:09]
\&      \-\-End of list\-\-
.Ve
.SH "PRIVILEGE REQUIRED"
.IX Header "PRIVILEGE REQUIRED"
None
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIklog\fR\|(1),
\&\fIunlog\fR\|(1)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
\&\s-1IBM\s0 Corporation 2000. <http://www.ibm.com/> All Rights Reserved.
.PP
This documentation is covered by the \s-1IBM\s0 Public License Version 1.0.  It was
converted from \s-1HTML\s0 to \s-1POD\s0 by software written by Chas Williams and Russ
Allbery, based on work by Alf Wachsmann and Elizabeth Cassell.
