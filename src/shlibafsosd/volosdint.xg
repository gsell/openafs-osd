/*
 * Copyright (c) 2011, Hartmut Reuter,
 * RZG, Max-Planck-Institut f. Plasmaphysik.
 * All Rights Reserved.
 *
 */

/*
 *  Module:	    volosdint.xg
 *  System:	    Volser
 */

package AFSVOLOSD_
prefix S

%#include "volint.h"

#define     VOLSALVAGE          1
#define     VOLARCHCAND         2
#define     VOLLISTOBJECTS      3
#define     VOLTRAVERSE         4
#define     VOLPOLUSE           5
#define     VOLSTATISTIC        6
#define     VOLVARIABLE         7

%#define     SALVAGE_UPDATE    2       /* for "vos salvage" */
%#define     SALVAGE_DECREM    4       /* for "vos salvage" */

%#define     EXTRACT_MD5       1       /* for "vos listobjects" */
%#define     EXTRACT_SIZE      2       /* for "vos listobjects" */
%#define     ONLY_HERE         4       /* for "vos listobjects" */
%#define     POL_INDICES       8       /* for "vos listobjects" */
%#define     ONLY_WIPED       16       /* for "vos listobjects" */

%#define     ONLY_BIGGER_MINWIPESIZE   1       /* for vos archvcand */
%#define     FORCE_ARCHCAND            2       /* for vos archvcand */

const SIZE = 1024;

#if 0
struct osd_info {
    afs_uint32 osdid;
    afs_uint32 fids;
    afs_uint32 fids1;   /* fids with no other copy */
    afs_uint64 bytes;
    afs_uint64 bytes1;  /* bytes only stored here */
};
typedef struct osd_info osd_infoList <>;

struct sizerange {
    afs_uint64 maxsize;
    afs_uint64 bytes;
    afs_uint32 fids;
};
typedef struct sizerange sizerangeList <>;

struct hsmcand {
    afs_uint32 volume;
    afs_uint32 vnode;
    afs_uint32 unique;
    afs_uint32 weight;
    afs_uint32 blocks;
};
typedef struct hsmcand hsmcandList <>;

struct volser_kbps {
    afs_uint32 val[96];
};
#endif

#if 0
proc OsdSupport(
  OUT afs_int32 *have_it
) = VOLOSDSUPPORT;
#endif

proc Salvage(
  IN afs_uint32 vid,
  IN afs_int32 flag,
  IN afs_int32 instances,
  IN afs_int32 localinst
) split = VOLSALVAGE;

proc Statistic (
  IN afs_int32 reset,
  OUT afs_uint32 *since,
  OUT afs_uint64* rcvd,
  OUT afs_uint64* sent,
  OUT struct volser_kbps *kbpsrcvd,
  OUT struct volser_kbps *kbpssent
) = VOLSTATISTIC;

proc PolicyUsage (
  IN afs_uint32 vid,
  OUT sizerangeList *srl,
  OUT osd_infoList *list
) = VOLPOLUSE;

proc Traverse(
  IN afs_uint32 vid,
  afs_uint32 delay,
  afs_int32 flag,
  OUT sizerangeList *srl,
  OUT osd_infoList *list
) = VOLTRAVERSE;

proc GetArchCandidates(
  IN afs_uint64 minsize,
  IN afs_uint64 maxsize,
  IN afs_int32 copies,
  IN afs_int32 maxcandidates,
  IN afs_int32 osd,
  IN afs_int32 flag,
  IN afs_uint32 delay,
  OUT hsmcandList *list
) = VOLARCHCAND;

proc ListObjects(
  IN afs_uint32 vid,
  IN afs_int32 flag,
  IN afs_int32 osd,
  IN afs_uint32 minage
) split = VOLLISTOBJECTS;
